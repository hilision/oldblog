-- MySQL dump 10.13  Distrib 5.7.21, for Linux (x86_64)
--
-- Host: localhost    Database: hilision
-- ------------------------------------------------------
-- Server version	5.7.21

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `tp_admin`
--

DROP TABLE IF EXISTS `tp_admin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_admin` (
  `id` mediumint(9) NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL COMMENT '管理员名称',
  `password` char(32) NOT NULL COMMENT '管理员密码',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tp_admin`
--

LOCK TABLES `tp_admin` WRITE;
/*!40000 ALTER TABLE `tp_admin` DISABLE KEYS */;
INSERT INTO `tp_admin` VALUES (21,'admin','81dc9bdb52d04dc20036dbd8313ed055');
/*!40000 ALTER TABLE `tp_admin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tp_article`
--

DROP TABLE IF EXISTS `tp_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_article` (
  `id` mediumint(9) NOT NULL AUTO_INCREMENT COMMENT '文章id',
  `title` varchar(60) NOT NULL COMMENT '文章标题',
  `author` varchar(30) NOT NULL COMMENT '文章作者',
  `desc` varchar(255) NOT NULL COMMENT '文章简介',
  `content` text,
  `picture` varchar(100) DEFAULT NULL,
  `click` int(10) NOT NULL DEFAULT '0' COMMENT '点击数',
  `create_time` int(10) DEFAULT NULL,
  `cateid` mediumint(9) NOT NULL COMMENT '所属栏目',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tp_article`
--

LOCK TABLES `tp_article` WRITE;
/*!40000 ALTER TABLE `tp_article` DISABLE KEYS */;
INSERT INTO `tp_article` VALUES (1,'Call to member function on null','hilision','调用ThinkPhp5 Controller assign()报Call to member function on null错误','&lt;div id=\'preview-contents\' class=\'note-content\'&gt;\r\n                        \r\n                    \r\n\r\n&lt;p&gt;在开发过程中遇见了这样的情况：控制器里定义了一个BaseController基类控制器，其他的控制器通过这个基类间接继承TP5的Controller，就像下面这样：&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;基类定义&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;app&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;admin&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;controller&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;think&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;Controller&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;think&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;facade&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;Session&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;wbr&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseController&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Controller&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    {\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;parent&lt;/span&gt;::__construct();\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        $hasSeesion = Session::has(&lt;span class=&quot;hljs-string&quot;&gt;\'id\'&lt;/span&gt;);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!$hasSeesion){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;redirect(&lt;span class=&quot;hljs-string&quot;&gt;\'Login/index\'&lt;/span&gt;);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;&lt;strong&gt;子类定义&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;app&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;admin&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;controller&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;app&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;admin&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;model&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;Cate&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CateModel&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//继承基类&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseController&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;categoryList&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    {\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        $cateList = CateModel::paginate(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        $page = $cateList-&amp;gt;render();\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-comment&quot;&gt;//意欲调用Controller中View下面的assign()&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;assign(&lt;span class=&quot;hljs-string&quot;&gt;\'page\'&lt;/span&gt;,$page);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;assign(&lt;span class=&quot;hljs-string&quot;&gt;\'cateList\'&lt;/span&gt;,$cateList);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;fetch(&lt;span class=&quot;hljs-string&quot;&gt;\'categoryList\'&lt;/span&gt;);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;正如上面代码中的注释，在基类中意欲调用Controller中的assign()，此时系统报错情况如下：&lt;/p&gt;\r\n\r\n&lt;p&gt;\r\n  &lt;img title=&quot;&quot; type=&quot;image/png&quot; src=&quot;/static/index/images/1234567.png&quot;&gt;\r\n&lt;/p&gt;\r\n\r\n&lt;p&gt;通过调试代码发现，categoryList()中的$this对象中的view为null，也即是系统报错的原因。&lt;/p&gt;\r\n\r\n&lt;p&gt;\r\n  &lt;img title=&quot;&quot; type=&quot;image/png&quot; src=&quot;/static/index/images/123456.png&quot;&gt;\r\n&lt;/p&gt;\r\n\r\n&lt;p&gt;而在直接继承Controller的地方无此现象。经过这些分析，认为是子类未真正继承到Controller，在查阅相关资料后，发现原因竟是BaseController的__construct覆盖了父类的构造方法，因此才会出现这样的情况。解决方法就是在BaseController里面继承父类的构造方法即可，如下：&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs scala&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseController&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Controller&lt;/span&gt;&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    public function __construct()\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    {\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-comment&quot;&gt;//继承父类的构造函数&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        parent::__construct();\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        ...\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;由此点发现自己的基础还是比较差的，这种最基本的会产生bug的情况自己也会忽视，仍需不断的学习。&lt;/p&gt;\r\n&lt;/blockquote&gt;&lt;/div&gt;',NULL,67,1523892561,10),(2,'CentOS 7.3 安装 MySQL','hilision','CentOS 7.3 如何安装MySQL，笔者分享一下自己的方法','&lt;div id=\'preview-contents\' class=\'note-content\'&gt;\r\n                        \r\n                    \r\n\r\n&lt;p&gt;&lt;strong&gt;CentOS7安装Mysql&lt;/strong&gt;&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;CentOS7现在默认安装的数据库是mariaDB。对于其和MySQL的关系自己不是很清楚，只知道mariaDB是从MySQL分离出来的。而在Oracle管理MySQL后，CentOS便不能直接安装MySQL了。也就是说，当你在命令行输入 yum - y install mysql后，安装的是mariaDB，如果你还是想用MySQL的话，这篇文章可以帮到你。需要说明的一点是，笔者自己是通过官网的介绍来进行的，可能会出现较多的意外状况，所以建议你依照官网的介绍来安装。安装文档在这里：&lt;a href=&quot;https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/#repo-qg-yum-installing&quot; target=&quot;_blank&quot;&gt;https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/#repo-qg-yum-installing&lt;/a&gt; &lt;br&gt;\r\n  笔者的安装坏境是：CentOS 7.3 &lt;br&gt;\r\n  安装的是MySQL 5.7&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;&lt;strong&gt;第一步&lt;/strong&gt; 下载 MySQL Yum repository&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs ruby&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;wget &lt;span class=&quot;hljs-symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;hljs-regexp&quot;&gt;/dev.mysql.com/downloads&lt;/span&gt;&lt;span class=&quot;hljs-regexp&quot;&gt;/get/mysql&lt;/span&gt;57-community-release-el7-&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;.noarch.rpm（&lt;span class=&quot;hljs-string&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;`下载的包默认存放路劲就是你的当前路径`&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;``&lt;/span&gt;）\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;&lt;strong&gt;第二步&lt;/strong&gt; 安装 MySQL Yum repository&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs clean&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;sudo rpm -Uvh mysql57-community-release-el6-n.noarch.rpm（```如果你下载不是这个包，那就应该替换成你的那个包名```）\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;&lt;strong&gt;第三步&lt;/strong&gt; 安装MySQL&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;sudo yum &lt;span class=&quot;hljs-keyword&quot;&gt;install&lt;/span&gt; mysql-community-&lt;span class=&quot;hljs-keyword&quot;&gt;server&lt;/span&gt;\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;&lt;strong&gt;最后&lt;/strong&gt; 启动MySQL&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs crmsh&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;sudo systemctl &lt;span class=&quot;hljs-literal&quot;&gt;start&lt;/span&gt; mysqld.service\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;',NULL,78,1524058817,15),(3,'由两个栈组成的队列','hilision','对题目进行适当的解析，然后再利用PHP实现题目','&lt;div id=\'preview-contents\' class=\'note-content\'&gt;\r\n                        \r\n                    \r\n\r\n\r\n\r\n\r\n\r\n&lt;p&gt;《剑指offer》里有这么一道题目：用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。我是在&lt;a href=&quot;https://www.nowcoder.com/practice/54275ddae22f475981afa2244dd448c6?tpId=13&amp;amp;tqId=11158&amp;amp;tPage=1&amp;amp;rp=1&amp;amp;ru=/ta/coding-interviews&amp;amp;qru=/ta/coding-interviews/question-ranking&quot; target=&quot;_blank&quot;&gt;牛客网&lt;/a&gt;刷到的这道题，之所以想就这道题写这么一篇文章，主要是对这个题的PHP实现感兴趣，在牛课网上，部分提交的PHP实现大都是这样的：&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;$stack = [];\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;mypush&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($node)&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{   &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; $stack;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $stack[]=$node;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;mypop&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;         \r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{  \r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; $stack;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;($stack){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array_shift($stack);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $stack;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;看到这个实现的时候，我比较疑惑。这里面的push操作就是往数组里面赋值，Pop操作则直接使用了array_shift()函数。关于这个函数，手册里面是这么解释的：&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;array_shift() 将 array 的第一个单元移出并作为结果返回，将 array 的长度减一并将所有其它单元向前移动一位。所有的数字键名将改为从零开始计数，文字键名将不变。&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;p&gt;也就是说这个函数是将一个数组的第一个元素移除，这很好理解。比如有这么一个数组[1,2,3,4]，那么使用array_shift()作用这个数组，首先将会移出第一个元素‘1’，然后后面的元素的索引都会由原来的索引减1(&lt;code&gt;不知道这样解释是否合理&lt;/code&gt;)。基于此，我觉得这种实现是不合题意的，尽管它确实实现了需求。 &lt;br&gt;\r\n为什么说不合题意呢？注意，题目要求的是实现&lt;strong&gt;队列&lt;/strong&gt;，而队列的特性我们都明白，那就是“先进先出”，这正好和栈相反，栈是先进后出，用栈来实现队列，则使得这道题显得有些意思。而我们上面的这个实现，并未体现&lt;strong&gt;栈&lt;/strong&gt;的特性，所以在我看来，这是不合题意的。&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;对于该解法在现实里或者说在工作中是否合理，我们在此不做讨论，本文仅就在题目框架下去讨论。至于别的场景，仁者见仁！&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;p&gt;这道题目逻辑上是比较简单的，我们利用栈先进后出的特性，构造两个栈，便可达成实现，一个栈用于Push，另一个用于Pop。&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;img alt=&quot;示意图&quot; type=&quot;image/png&quot; src=&quot;/static/index/images/schematic.png&quot;&gt; &lt;br&gt;\r\n如上图的示意，将1~5一次压入sPush，顺序自然是1、2、3、4、5，如此sPush栈顶元素就是5，这时，将sPush中的元素弹出，并将弹出的元素同时压入sPop，那么顺序自然是5，4，3，2，1，这时sPop栈顶元素就是1。此时将sPop内元素依次弹出，顺序就是1，2，3，4，5，而这正好与元素压入sPush的顺序相同，如此而来，便实现了队列&lt;strong&gt;先进先出&lt;/strong&gt;的特性了，同时也是用栈来构造的。如此而来，在题目框架上，笔者觉得这才是合理的。 &lt;br&gt;\r\n逻辑上比较简单，但我们有两个点是需要注意的。&lt;/p&gt;\r\n\r\n&lt;ol&gt;&lt;li rel=&quot;1&quot;&gt;如果sPush要往sPop中压入数据，那么必须一次性将sPush中的数据全部压入。比如sPush中由栈顶到栈底元素依次为5、4、3、2、1，如果我们仅将栈顶前三个元素压入sPop，那么由sPop弹出的第一个数据将会是3，这与预想的队列顺序就不一致了。&lt;/li&gt;\r\n&lt;li rel=&quot;2&quot;&gt;如果sPop不为空，则不允许压入新数据。比如sPop中由栈顶到栈底依次是1，2，3，此时在sPop未空时再压入元素4~5，那么栈底就变成了4~5，1~3，此时再进行弹出操作，元素4将会被先弹出，这也是不合需求的。&lt;/li&gt;\r\n&lt;/ol&gt;\r\n\r\n&lt;p&gt;下面是笔者在牛客网上提交的答案。关于PHP的栈，我们使用了SplStack类，关于该类，手册上是这么说的：&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;The SplStack class provides the main functionalities of a stack implemented using a doubly linked list（&lt;code&gt;SplStack基于双向链表提供了栈特性的实现（该翻译仅作参考）&lt;/code&gt;），该类有两个方法，pop()、push()。 &lt;br&gt;\r\n  以下是代码实现：&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;$stackIn = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SplStack(); &lt;span class=&quot;hljs-comment&quot;&gt;//sPush&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;$stackOut = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SplStack(); &lt;span class=&quot;hljs-comment&quot;&gt;//sPop&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;mypush&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($node)&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; $stackIn;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    $stackIn-&amp;gt;push($node);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;mypop&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; $stackIn,$stackOut;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;//如果sPop不为空，则必须先将其“置空”&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!$stackOut-&amp;gt;isEmpty()){ \r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $stackOut-&amp;gt;pop();\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(!$stackIn-&amp;gt;isEmpty()){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            &lt;span class=&quot;hljs-comment&quot;&gt;//循环弹出sPush元素的同时将元素压入sPop&lt;/span&gt;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            $stackOut-&amp;gt;push($stackIn-&amp;gt;pop());\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $stackOut-&amp;gt;pop();\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;',NULL,32,1524238479,17),(4,'谈一谈对RESTful API的理解','hilision','结合自己开发的小程序项目，谈一谈自己对于RESTful API设计标准的理解。顺便梳理一下项目中自己对这一块的理解。','&lt;div id=\'preview-contents\' class=\'note-content\'&gt;\r\n                        \r\n                    \r\n\r\n&lt;p&gt;RESTful API是一种Web应用通信机制的设计标准，只是提供了一组设计原则和约束条件。总结一句话就是：RESTful API是一套互联网应用程序的API设计理论，基于该机制设计的API都应该遵守其架构设计和指导原则。对于其设计细节，大家可参考阮一峰老师的这篇文章：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api&quot; target=&quot;_blank&quot;&gt;《RESTful API 设计指南》&lt;/a&gt;。在本文中，笔者将结合开发的这个项目，梳理一下笔者对于RESTful API的理解，加深一下印象。&lt;/p&gt;\r\n\r\n&lt;p&gt;首先一个便是API与用户的通信协议。在&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api&quot; target=&quot;_blank&quot;&gt;《RESTful API 设计指南》&lt;/a&gt;中，作者强调了API总是使用HTTPs协议。这正好也符合小程序文档中对于服务器的域名要求，小程序官方文档中对于域名有如下几点要求：&lt;/p&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;域名只支持 https (request、uploadFile、downloadFile) 和 wss (connectSocket) 协议；&lt;/li&gt;\r\n&lt;li&gt;域名不能使用 IP 地址或 localhost，且不能带端口号；&lt;/li&gt;\r\n&lt;li&gt;域名必须经过 ICP 备案；&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;p&gt;第二个就是域名的定义。同样的，在&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api&quot; target=&quot;_blank&quot;&gt;《RESTful API 设计指南》&lt;/a&gt;中，作者对域名定义的理解是应该将API部署在专用的域名之下。所以项目中我的做法是在ThinkPHP的application中定义了一个模块“api”，系统的所有接口都在该模块之下。如此而来，对于客户端的开发者来说，便能通过这个域名理解其功能是什么了。就像下面这样：&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs awk&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;https:&lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt;www.hshine.net&lt;span class=&quot;hljs-regexp&quot;&gt;/api/&lt;/span&gt; (此处隐藏了入口文件index.php)\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;第三个是版本。接口的开发过程中总会需要进行一些新接口的加入或者对原有接口的升级，在后期若有对部分接口做了升级或者新增了部分接口，那么我们应该通过版本管理的方式来定义这些接口，而不建议直接去更改旧的接口。同时，如&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api&quot; target=&quot;_blank&quot;&gt;《RESTful API 设计指南》&lt;/a&gt;中的介绍一样，应该将API的版本号放入URL。在项目中，我是这样做的：&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs awk&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;https:&lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt;www.hshine.net&lt;span class=&quot;hljs-regexp&quot;&gt;/api/&lt;/span&gt;v1\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;对应于的系统结构：&lt;/p&gt;\r\n\r\n&lt;p&gt;&lt;img alt=&quot;文件结构&quot; type=&quot;image/png&quot; src=&quot;/static/index/images/15679.png&quot; class=&quot;&quot;&gt;&lt;/p&gt;\r\n\r\n&lt;p&gt;通常，在ThinkPHP的模块中的controller中定义了新的模块，那么我们的路由定义则应该有着相应的变动：&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs awk&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;Route::get(&lt;span class=&quot;hljs-string&quot;&gt;\'api/:version/banner/:id\'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;\'api/:version.Banner/getBanner\'&lt;/span&gt;);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;当我们访问该接口时，URL地址是这样的：\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;https:&lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt;www.hshine.net&lt;span class=&quot;hljs-regexp&quot;&gt;/api/&lt;/span&gt;v1&lt;span class=&quot;hljs-regexp&quot;&gt;/banner/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;上面的代码是banner接口的路由定义，“: version”这样的定义其实就是传入参数的定义。所以我们在访问这个接口的URL时，需要传入两个参数，一个是version，一个是id。这样的路由定义其拓展性就比较高了，也就是说在后期如果我们还有v2、v3等等的版本接口，那么我们的banner接口的路由定义都可以不做更改而能够支持这些版本的修改。&lt;/p&gt;\r\n\r\n&lt;p&gt;第四个是路径。在RESTful的设计理念中，每一个URL都代表着是一种资源。就像banner接口，它对应的就是banner的资源，通过请求这个接口，我们可以获得banner的所有资源，包括他的图片数量、图片地址以及图片本身。又比如系统中的theme接口，他也是一种资源，通过请求theme接口，我们可以获得theme的数量，每个theme包含的商品，每个商品的信息等等。&lt;/p&gt;\r\n\r\n&lt;p&gt;事实上，从上面这四点我们可以看出，我们都是在基于RESTful API的标准来定义API 的URL，我们的目标是力求通过这样的URL就能够知道该接口的意义。&lt;/p&gt;\r\n\r\n&lt;p&gt;第五个是HTTP动词。在第四点中，我们知道一个URL就是一种资源，那么对于资源的操作，我们是由HTTP动词来表示的。也即是增删改查等等。&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api&quot; target=&quot;_blank&quot;&gt;《RESTful API 设计指南》&lt;/a&gt;中是这样介绍的：&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;常用的HTTP动词有下面五个（括号里是对应的SQL命令）。&lt;/p&gt;\r\n  \r\n  &lt;ul&gt;&lt;li&gt;GET（SELECT）：从服务器取出资源（一项或多项）。&lt;/li&gt;\r\n  &lt;li&gt;POST（CREATE）：在服务器新建一个资源。&lt;/li&gt;\r\n  &lt;li&gt;PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。 &lt;/li&gt;\r\n  &lt;li&gt;PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。        &lt;/li&gt;\r\n  &lt;li&gt;DELETE（DELETE）：从服务器删除资源。&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;p&gt;所以在项目中，我们每一个接口的路由定义都限定了其请求类型。这样做在我来看有两点好处，第一个自然是意义明确，第二个就是提升了系统的安全性。在ThinkPHP框架中，通过限定请求类型，框架就会帮我们过滤掉那些非法的请求类型，一定程度上能有助于提高系统的安全性。&lt;/p&gt;\r\n\r\n&lt;p&gt;第六个是状态码。服务器应总是向用户返回状态码和提示信息。项目中用到的有以下几种：&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;ul&gt;&lt;li&gt;200 OK - [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。&lt;/li&gt;\r\n  &lt;li&gt;201 CREATED - [POST/PUT/PATCH]：用户新建或修改数据成功。&lt;/li&gt;\r\n  &lt;li&gt;204 NO CONTENT - [DELETE]：用户删除数据成功。&lt;/li&gt;\r\n  &lt;li&gt;400 INVALID REQUEST - [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。&lt;/li&gt;\r\n  &lt;li&gt;401 Unauthorized - [*]：表示用户没有权限（令牌、用户名、密码错误）。&lt;/li&gt;\r\n  &lt;li&gt;403 Forbidden - [*] 表示用户得到授权（与401错误相对），但是访问是被禁止的。&lt;/li&gt;\r\n  &lt;li&gt;404 NOT FOUND - [*]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。&lt;/li&gt;\r\n  &lt;li&gt;500 INTERNAL SERVER ERROR - [*]：服务器发生错误，用户将无法判断发出的请求是否成功。&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;p&gt;基于此，项目中还定义了错误码，如下：&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;ul&gt;&lt;li&gt;999  未知错误&lt;/li&gt;\r\n  &lt;li&gt;10000 通用参数错误 &lt;/li&gt;\r\n  &lt;li&gt;10001 资源未找到 &lt;/li&gt;\r\n  &lt;li&gt;10002 未授权（令牌不合法）&lt;/li&gt;\r\n  &lt;li&gt;10003 尝试非法操作（笔者的令牌操作其他人数据）&lt;/li&gt;\r\n  &lt;li&gt;20000 请求商品不存在&lt;/li&gt;\r\n  &lt;li&gt;30000 请求主题不存在&lt;/li&gt;\r\n  &lt;li&gt;40000 Banner不存在&lt;/li&gt;\r\n  &lt;li&gt;50000 类目不存在&lt;/li&gt;\r\n  &lt;li&gt;60000 用户不存在&lt;/li&gt;\r\n  &lt;li&gt;60001 用户地址不存在&lt;/li&gt;\r\n  &lt;li&gt;80000 订单不存在&lt;/li&gt;\r\n  &lt;li&gt;80003 订单已支付过&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;p&gt;制定并完善这些状态码与错误码意义的设定，应该说是极其重要的，这样对于客户端的开发者来说，就能够很方便的去进行开发工作，若系统出现异常，也能及时快速的定位到错误源。&lt;/p&gt;\r\n\r\n&lt;p&gt;同时，我们还需要返回错误信息，在系统中，若出现相关错误，系统都会抛出异常，对于异常，我们也进行了分类，并且给出了对应的错误信息。当抛出异常时，系统将会返回一个json字符串，这里面包含了code(状态码)、msg(异常信息)、errorCode(错误码)，就像下面这样：&lt;/p&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt; \r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;app&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;lib&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;exception&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BannerMissException&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseException&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; $code = &lt;span class=&quot;hljs-number&quot;&gt;404&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; $msg = &lt;span class=&quot;hljs-string&quot;&gt;\'请求的Banner不存在\'&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; $errorCode = &lt;span class=&quot;hljs-number&quot;&gt;40000&lt;/span&gt;;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;p&gt;在BannerMissException异常类中，我们对其异常的处理信息设定如上。&lt;/p&gt;\r\n\r\n&lt;p&gt;第七个是返回结果。在项目中，我们返回的结果都是一个Jsoni结构的字符串，对于前端来说的话就是一个Json对象，也即是符合&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api&quot; target=&quot;_blank&quot;&gt;《RESTful API 设计指南》&lt;/a&gt;中要求，文中，对于返回结果的定义如下：&lt;/p&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;ul&gt;&lt;li&gt;GET /collection：返回资源对象的列表（数组）&lt;/li&gt;\r\n  &lt;li&gt;GET /collection/resource：返回单个资源对象POST /collection：返回新生成的资源对象 &lt;/li&gt;\r\n  &lt;li&gt;PUT /collection/resource：返回完整的资源对象&lt;/li&gt;\r\n  &lt;li&gt;PATCH /collection/resource：返回完整的资源对象 &lt;/li&gt;\r\n  &lt;li&gt;DELETE /collection/resource：返回一个空文档&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;p&gt;第八个是返回的数据格式。项目中所有的接口无论是正常结果还是异常信息，我们都是返回JSON格式的。&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/05/restful_api&quot; target=&quot;_blank&quot;&gt;《RESTful API 设计指南》&lt;/a&gt;中也建议应该尽量使用JSON。&lt;/p&gt;\r\n\r\n&lt;p&gt;以上就是笔者结合这个项目和RESTful API标准对RESTful API的简单理解。&lt;/p&gt;&lt;/div&gt;',NULL,38,1524397115,19),(5,'用PHP简单实现冒泡，选择排序法','hilision','用PHP简单实现冒泡，选择排序法','&lt;div id=\'preview-contents\' class=\'note-content\'&gt;\r\n                        \r\n                    \r\n\r\n&lt;h4 id=&quot;冒泡&quot;&gt;冒泡&lt;/h4&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;算法思想&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;对于一批数据，我们自左而右的对相邻的数进行比较，较大的数往右移，较小的向左移，如此循环，即可排好一个由左到右的，从小到大顺序。&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;图解&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;p&gt;&lt;img alt=&quot;buble&quot; title=&quot;&quot; type=&quot;image/jpeg&quot; src=&quot;/static/index/images/buble.jpg&quot; class=&quot;&quot;&gt;&lt;/p&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;PHP实现&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs php&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;buble&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;($arr)&lt;/span&gt;\r\n&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    $arrLen = count($arr);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;($i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;$i &amp;lt; $arrLen;$i++){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;($j = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;$j &amp;lt; $arrLen - $i;$j++){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;($arr[$j] &amp;gt; $arr[$j + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;                    $temp = $arr[$j];\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;                    $arr[$j] = $arr[$j + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;                    $arr[$j + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]  = $temp;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;相关说明 &lt;br&gt;\r\n第一层for循环是用来控制总循环的，第二层for循环则是用来控制每轮比较的循环。&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;h4 id=&quot;选择排序法&quot;&gt;选择排序法&lt;/h4&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;算法思想&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;通过下标位置减少元素的交换。在每一轮比较中，首先定义当前循环中第一个元素为最小/最大的元素，然后通过循环，在剩下的数中找出相应的数与第一个元素交换；然后在再通过循环找出相应的数与第二个元素交换，以此类推，直到第n-1个元素和第n个元素交换。&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;图解&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;p&gt;&lt;img alt=&quot;simpleSelect&quot; title=&quot;&quot; type=&quot;image/jpeg&quot; src=&quot;/static/index/images/simpleSelect.jpg&quot; class=&quot;&quot;&gt;&lt;/p&gt;\r\n\r\n&lt;ul&gt;&lt;li&gt;PHP实现&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs gams&quot;&gt;&lt;div class=&quot;hljs-line&quot;&gt;public function simpleSelect(&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr)\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;{\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arrLen = count(&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr);\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i &amp;lt; &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arrLen;&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i++){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;hljs-built-in&quot;&gt;min&lt;/span&gt;  = &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;j = &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;j &amp;lt; &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arrLen;&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;j++){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr[&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;hljs-built-in&quot;&gt;min&lt;/span&gt;] &amp;gt; &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr[&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;j]){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;                &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;hljs-built-in&quot;&gt;min&lt;/span&gt; = &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;j;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            }                        \r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i != &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;hljs-built-in&quot;&gt;min&lt;/span&gt;){\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;temp = &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr[&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;hljs-built-in&quot;&gt;min&lt;/span&gt;];\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr[&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;hljs-built-in&quot;&gt;min&lt;/span&gt;] = &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr[&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i];\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;            &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;arr[&lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;i] = &lt;span class=&quot;hljs-symbol&quot;&gt;$&lt;/span&gt;temp;\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;        }\r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;    }    \r\n&lt;/div&gt;&lt;div class=&quot;hljs-line&quot;&gt;}\r\n&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;',NULL,28,1524415549,20);
/*!40000 ALTER TABLE `tp_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tp_cate`
--

DROP TABLE IF EXISTS `tp_cate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_cate` (
  `id` mediumint(9) NOT NULL AUTO_INCREMENT COMMENT '栏目id',
  `catename` varchar(30) NOT NULL COMMENT '栏目名称',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tp_cate`
--

LOCK TABLES `tp_cate` WRITE;
/*!40000 ALTER TABLE `tp_cate` DISABLE KEYS */;
INSERT INTO `tp_cate` VALUES (10,'PHP'),(15,'CentOS'),(17,'剑指Offer'),(19,'RESTful API'),(20,'数据结构与算法');
/*!40000 ALTER TABLE `tp_cate` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-05-15  9:50:12
